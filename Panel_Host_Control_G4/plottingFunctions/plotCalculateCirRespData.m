
function varargout = plotCalculateCirRespData(cirRespResultSt)

% function varargout = plotCalculateCirRespData(cirRespResultSt)
%
% preliminary function to plot cirular response data that was generated by 
% calculateCircularRepresentationForProtocol

figure('units', 'normalized', 'position', [0.4, 0.12, 0.22, 0.8])

fNames = fieldnames(cirRespResultSt);

timeInd = find(ismember(fNames, 'time'));
nvInd = find(ismember(fNames, 'normVecMag'));
thetaInd = find(ismember(fNames, 'theta'));

if isempty(timeInd)
    error('missing time field')
end

posCell = generatePositionCell(0.05, 0.95, 0.05, 0.975, -1, 0.04, length(fNames)-1);

numGrt=length(cirRespResultSt);

relCol = cbrewer('qual', 'Paired', 2*numGrt); %to make it similar to DSSummary

xxMin=0; xxMax=0;

for ff=1:length(fNames)-1 % since last is time
    
    axh(ff) = axes('position', posCell{ff});
    hold on
    for ii=1:numGrt
        
        relDat = getfield(cirRespResultSt(ii), fNames{ff});
        plot(cirRespResultSt(ii).time, relDat, '.', 'color', relCol(2*ii, :))
        title(fNames{ff})
        if xxMin > cirRespResultSt(ii).time(1)
            xxMin = cirRespResultSt(ii).time(1);
        end
        if xxMax < cirRespResultSt(ii).time(end)
            xxMax = cirRespResultSt(ii).time(end);
        end
    end
    
    hold off
    if ff == nvInd
        set(axh(ff), 'ylim', [0,1])
    end
    
    if ff == thetaInd
        set(axh(ff), 'ylim', [-pi-0.1, pi+0.1], 'ytick', -pi:pi/4:pi, ...
            'yticklabel', {'-\Pi', '', '-\Pi/2', '', '0', '', '\Pi/2', '', '\Pi'}, ...
            'ygrid', 'on')
    end
        
    
end

set(axh(:), 'xlim', [xxMin, xxMax])

if nargout > 0
    varargout{1} = axh;
end


end