function fitSt = fitCosToFlickerBar(parseDat, numFlickers)

% function fitSt = fitCosToFlickerBar(pStruct);
%
% This function uses fit to fit a cosine function to the data from a
% flickerBar stimulus protocol. 
% The fitted function is of the type 
% offset + amp*cos(phase + const*xx), where const is used as a constant (not fitted), 
% and given by the user.
% 
%
% INPUT
% 
% parseDat -        NX2 matrix with 1st column being time stamps and second data. 
%                   Data already parsed to show only the traces where the
%                   cell responds to the flicker (preferably meanData)
% numFlickers -     number of times the bar flickered the entire duration
%
% OUTPUT
% fitSt -           structure generated by the fit function


xx = parseDat(:,1);
yy = parseDat(:,2);
assert(length(numFlickers) == 1, 'numFlickers should be a single round number')

% calculating const

sampPerCyc = length(xx)/numFlickers;
cycPerXVal = mean(diff(find(diff(mod(xx, 2*pi)) < -5))); %finds many xx values it takes to cycle through cos

const = cycPerXVal/sampPerCyc;

% to remove slope as a parameter remove/comment out from the 4 lines labeled w/ %%
fType = fittype('offset + amp*cos(phase + const*xx)', ...  %%
             'dependent', {'yy'}, 'independent', {'xx'}, ...
             'coefficients', {'offset', 'amp', 'phase'}, ... %%
             'problem', 'const');

% providing starting parameters to fit
offSt = mean(yy);
ampSt = (max(yy) - min(yy))/2;
phaSt = pi; 
%sloSt = 0; %%
         
fitOpt = fitoptions(fType); 
fitOpt.StartPoint = [offSt, ampSt, phaSt]; %%

fitSt = fit(xx, yy, fType, fitOpt, 'problem', const);

end