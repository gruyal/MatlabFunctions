
function totStat = make_vSDpattern_imageG4(pStruct, saveDir)

% function totStat = make_vSDpattern_imageG4(pStruct, saveDir)
%
% This function is a changed version of make_vSDpattern_image that is compatible with the G4 arena
% It take a full protcol structure and generates the required pattern files for it
%
% INPUTS
% pStruct -     structure generated by createProtocol function. Should contain the following fields
%               .stim   .gsLevel  (stim should have a .matCell in it)
% saveDir -     string. name of directory where the files will be saved
%
% output is simply the sum of fclose status
%
% NOTE! this function disables arena pitch correction

if ~isfolder(saveDir)
  error('%s folder does not exsit', saveDir)
end

if isfield(pStruct, 'gsLevel')
    gs_val = pStruct.gsLevel; % deals with protocolStructComb
elseif isfield(pStruct, 'gratingStruct')
    gs_val = pStruct.gratingStruct(1).gsLevel; % assumes they all have the same gsLevel
else
    error('Missing gsLevel field')
end
num_patterns = length(pStruct.stim);

% make sure folder is empty (should have no files in Patterns folder)
if isfolder(fullfile(saveDir, 'Patterns'))
    testForFiles = dir(fullfile(saveDir, 'Patterns'));
    filesInDir = testForFiles(~[testForFiles.isdir]);
    assert(isempty(filesInDir), 'Patterns directory not empty')
  else
    mkdir(fullfile(saveDir, 'Patterns'))
end

stat = zeros(1, num_patterns);
for ii = 1:num_patterns
    relStim = pStruct.stim(ii);

    Pats = relStim.matCell;
    param.stretch = zeros(size(Pats,3), 1); % would have to change to use this feature
    param.gs_val = gs_val;
    param.ID =  ii;
    param.arena_pitch = 0;  % disabling arena pitch correction
    stat(ii) = save_pattern_G4(Pats, param, [saveDir, '\Patterns'], ['Pattern_' num2str(param.ID, '%04d') '_G4.mat']);

end


totStat = sum(stat);

fprintf('%d pattern files written to Pattern folder (out of %d) \n', ii, num_patterns)

end
