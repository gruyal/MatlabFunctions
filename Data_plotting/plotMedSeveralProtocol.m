function varargout = plotMedSeveralProtocol(relProts, expRes, expSt, relFreq, cMap)

% function plotMedSeveralProtocol(relProts, expRes, expSt, relFreq)
% 
% This function plots the plotResultsByMatrix of all the protocols in
% relProts, take the mekdian response plotted (defined as a red line) and overlays all 
% median from all the protocols in the same panel. 
%
% INPUT
%
% relProt -     Protocal number from expSt
% expRes -      expResults structure generated by runPanelExperiment (has
%               protocolNum and dara fields)
% expSt -       expStructure generated by checkExpStruct (has pattern, posFun,
%               and protocol fields)
% relFreq -     freqeuncy with which pattern was played (recorded in
%               expProts).
% cMap -        (optional) color map to use for plotting lines. Should be
%               given as an NX3 array with N >= % protocols
%
%  OUTPUT
% axhand -      (optional) axes handles to all the plots
% legh -        (optional) legend handle


close all
yylim = zeros(2, length(relProts));

tempH = plotResultsByMatrixPos(relProts(1), expRes, expSt, relFreq, 1);
medH = flipud(findobj('color', 'r')); %gives the result in a reversed order
stimH = flipud(findobj('color', 'k'));

allXtoPlot = cell(length(relProts), length(tempH));
allYtoPlot = allXtoPlot;
allStoPlot = allXtoPlot;

allPosTit = zeros(length(relProts), length(tempH));

posCell = arrayfun(@(x) get(x, 'position'), tempH, 'uniformoutput', 0);


tempTith = arrayfun(@(x) get(x, 'title'), tempH);
allPosTit(1, :) = arrayfun(@(x) str2double(get(x, 'string')), tempTith);

allXtoPlot(1, :) = arrayfun(@(x) get(x, 'xdata'), medH, 'uniformoutput', 0);
allYtoPlot(1, :) = arrayfun(@(x) get(x, 'ydata'), medH, 'uniformoutput', 0);
allStoPlot(1, :) = arrayfun(@(x) get(x, 'ydata'), stimH, 'uniformoutput', 0);
yylim(:,1) = get(tempH(1), 'ylim');


% provides time to peruse the figure
disp('Press any key to continue')
inp = waitforbuttonpress;
while inp~=1
    inp = waitforbuttonpress;
end
close gcf


for ii=2:length(relProts)
   
    tempH = plotResultsByMatrixPos(relProts(ii), expRes, expSt, relFreq, 1);
    medH = flipud(findobj('color', 'r'));
    stimH = flipud(findobj('color', 'k'));
    
    allXtoPlot(ii, :) = arrayfun(@(x) get(x, 'xdata'), medH, 'uniformoutput', 0);
    allYtoPlot(ii, :) = arrayfun(@(x) get(x, 'ydata'), medH, 'uniformoutput', 0);
    allStoPlot(ii, :) = arrayfun(@(x) get(x, 'ydata'), stimH, 'uniformoutput', 0);
    
    tempTith = arrayfun(@(x) get(x, 'title'), tempH);
    allPosTit(ii, :) = arrayfun(@(x) str2double(get(x, 'string')), tempTith);
    yylim(:,ii) = get(tempH(1), 'ylim');
    
    % provides time to peruse the figure
    disp('Press any key to continue')
    inp = waitforbuttonpress;
    while inp~=1
        inp = waitforbuttonpress;
    end
    close gcf
    
end


% making sure all the protocols used the same windows 
if sum(diff(allPosTit))
    error('Protocols do not share the same X positions')
end

% getting rid of small variability in lengths
allL = cellfun(@length, allXtoPlot);
%minLen = min(allL(:));
maxLen = max(allL(:));

%plotting all medians
allYYlim = [min(yylim(1,:)), max(yylim(2,:))];

if nargin < 5
    cmap = colormap('lines');
else
    cmap = cMap;
end

if size(cmap,1) < length(relProts)
    error('Not enough color specifications given in cMap!')
end

axhand = cellfun(@(x) axes('position', x), posCell);
legStrings = arrayfun(@(x) strcat('Prot:', num2str(x)), relProts, 'uniformoutput', 0);

for ii=1:length(tempH)
    
    baseS = cellfun(@(x) mean(x(1:100)), allStoPlot(:, ii));
    maxS = cellfun(@max, allStoPlot(:, ii));
    fudgeS = baseS - min(baseS);
    expandS = (maxS - baseS)/5; %adjusts it to a 5mv size on the plot
    
    hold(axhand(ii), 'on')
    
    for jj=1:length(relProts) 
        
        plot(axhand(ii), allXtoPlot{jj, ii}, allYtoPlot{jj, ii}, ...
            'color', cmap(jj, :), 'linewidth', 2)
        
        
        plot(axhand(ii), allXtoPlot{jj, ii}, ...
             (allStoPlot{jj, ii} - baseS(jj))/expandS(jj) + baseS(jj) - fudgeS(jj), ...
            'color', cmap(jj, :), 'linewidth', 1)
        
    end
    
    if ii == 1
            tempLineh = flipud(findobj('linewidth', 2));
            legh = legend(axhand(1), tempLineh, legStrings);
    end
    
    
    
    hold(axhand(ii), 'off')
    title(axhand(ii), num2str(allPosTit(1, ii)))
end

set(axhand(:), 'ylim', allYYlim, 'xlim', [1, maxLen])
set(gcf, 'units', 'normalized', 'position', [0.25, 0.25, 0.5, 0.6])

if nargout == 1
    varargout{1} = axhand;
elseif nargout == 2
    varargout{1} = axhand;
    varargout{2} = legh;
end





end